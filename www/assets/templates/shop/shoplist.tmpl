(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['shoplist'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n        <div class=\"row\">\n            	<div class=\"col-xs-8\" style=\"margin-top:10px;\" >\n            		<span class=\"glyphicon glyphicon-check\"></span>\n            		&nbsp;";
  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\n                </div>\n            	<div class=\"col-xs-4\" style=\"text-align:right;\">\n				    <button type=\"button\" class=\"btn btn-primary btn-sm\" data-val=\"";
  if (helper = helpers.sid) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.sid); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">매장정보보기  <span class=\"glyphicon glyphicon-chevron-right\"></span></button>\n                </div>\n        </div>\n        <div class=\"col-xs-12 div-line\"></div>   \n        \n        ";
  return buffer;
  }

  buffer += "\n                    \n\n <div id=\"contents_center\" class=\"wrapped-content\">\n\n    <form id=\"frmShopList\" class=\"full-width\" action=\"\">\n        <div class=\"txt-center\">\n            <h3 class=\"title txt-center\"><span class=\"glyphicon glyphicon-check\"></span> ";
  if (helper = helpers.TITLE) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.TITLE); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</h3>\n        </div>\n        <hr/>\n        \n        ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.storeList), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        <div class=\"clear\"></div>\n        \n    </form>\n \n </div>";
  return buffer;
  });
})();